{"ast":null,"code":"import { delay, all, fork, takeLatest, put } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME } from \"../reducers/user\"; // import shortId from 'shortid';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/addPost', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000); // const id = shortId.generate();\n\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post('/api/addPost', data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    yield alert(action.data);\n    yield console.log(action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchCommentPost() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchCommentPost)]);\n}","map":{"version":3,"names":["delay","all","fork","takeLatest","put","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","addPostAPI","data","axios","post","addPost","action","type","id","err","response","addCommentAPI","addComment","alert","console","log","watchAddPost","watchCommentPost","postSaga"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/sagas/post.js"],"sourcesContent":["import { delay, all, fork, takeLatest, put } from \"redux-saga/effects\";\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n    ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n} from '../reducers/post'\r\n\r\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\r\n\r\n// import shortId from 'shortid';\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/addPost', data)\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data)\r\n        yield delay(1000)\r\n        // const id = shortId.generate();\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: action.data\r\n        })\r\n        yield put({\r\n            type: ADD_POST_TO_ME,\r\n            data: id\r\n        })\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post('/api/addPost', data)\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data)\r\n        yield delay(1000)\r\n        yield alert(action.data)\r\n        yield console.log(action.data)\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: action.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost)\r\n}\r\n\r\nfunction* watchCommentPost() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment)\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchCommentPost),\r\n    ]);\r\n}"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,UAA3B,EAAuCC,GAAvC,QAAkD,oBAAlD;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EACIC,mBADJ,EACyBC,mBADzB,EAC8CC,mBAD9C,QAEO,kBAFP;AAIA,SAASC,cAAT,QAA+B,kBAA/B,C,CAEA;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EACtB,OAAOC,KAAK,CAACC,IAAN,CAAW,cAAX,EAA2BF,IAA3B,CAAP;AACH;;AAED,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;EACtB,IAAI;IACA;IACA,MAAMjB,KAAK,CAAC,IAAD,CAAX,CAFA,CAGA;;IACA,MAAMI,GAAG,CAAC;MACNc,IAAI,EAAEZ,gBADA;MAENO,IAAI,EAAEI,MAAM,CAACJ;IAFP,CAAD,CAAT;IAIA,MAAMT,GAAG,CAAC;MACNc,IAAI,EAAEP,cADA;MAENE,IAAI,EAAEM;IAFA,CAAD,CAAT;EAIH,CAZD,CAYE,OAAOC,GAAP,EAAY;IACV,MAAMhB,GAAG,CAAC;MACNc,IAAI,EAAEX,gBADA;MAENM,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;IAFb,CAAD,CAAT;EAIH;AACJ;;AAED,SAASS,aAAT,CAAuBT,IAAvB,EAA6B;EACzB,OAAOC,KAAK,CAACC,IAAN,CAAW,cAAX,EAA2BF,IAA3B,CAAP;AACH;;AAED,UAAUU,UAAV,CAAqBN,MAArB,EAA6B;EACzB,IAAI;IACA;IACA,MAAMjB,KAAK,CAAC,IAAD,CAAX;IACA,MAAMwB,KAAK,CAACP,MAAM,CAACJ,IAAR,CAAX;IACA,MAAMY,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACJ,IAAnB,CAAN;IACA,MAAMT,GAAG,CAAC;MACNc,IAAI,EAAET,mBADA;MAENI,IAAI,EAAEI,MAAM,CAACJ;IAFP,CAAD,CAAT;EAIH,CATD,CASE,OAAOO,GAAP,EAAY;IACV,MAAMhB,GAAG,CAAC;MACNc,IAAI,EAAER,mBADA;MAENG,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;IAFb,CAAD,CAAT;EAIH;AACJ;;AAED,UAAUc,YAAV,GAAyB;EACrB,MAAMxB,UAAU,CAACE,gBAAD,EAAmBW,OAAnB,CAAhB;AACH;;AAED,UAAUY,gBAAV,GAA6B;EACzB,MAAMzB,UAAU,CAACK,mBAAD,EAAsBe,UAAtB,CAAhB;AACH;;AAGD,eAAe,UAAUM,QAAV,GAAqB;EAChC,MAAM5B,GAAG,CAAC,CACNC,IAAI,CAACyB,YAAD,CADE,EAENzB,IAAI,CAAC0B,gBAAD,CAFE,CAAD,CAAT;AAIH"},"metadata":{},"sourceType":"module"}