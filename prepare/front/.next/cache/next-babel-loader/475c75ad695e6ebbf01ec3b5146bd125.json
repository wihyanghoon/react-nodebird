{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { useSelector } from \"react-redux\";\nimport PostCard from \"../../components/PostCard\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const [singlePost] = useSelector(state => state.post);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(PostCard, {\n    post: si,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('getServerSideProps start');\n  console.log(context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MYINFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps end');\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"names":["useRouter","AppLayout","useSelector","PostCard","Post","router","id","query","singlePost","state","post","si","getServerSideProps","wrapper","context","console","log","req","headers","cookie","axios","defaults","Cookie","store","dispatch","type","LOAD_MYINFO_REQUEST","END","sagaTask","toPromise"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/pages/post/[id].js"],"sourcesContent":["import { useRouter } from \"next/router\"\r\nimport AppLayout from \"../../components/AppLayout\"\r\nimport { useSelector } from \"react-redux\"\r\nimport PostCard from \"../../components/PostCard\"\r\nconst Post = () => {\r\n    const router = useRouter()\r\n    const { id } = router.query\r\n    const [singlePost] = useSelector((state) => state.post)\r\n    return (\r\n        <AppLayout>\r\n            <PostCard post={si} />\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    console.log('getServerSideProps start');\r\n    console.log(context.req.headers);\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MYINFO_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    console.log('getServerSideProps end');\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AACA,MAAMC,IAAI,GAAG,MAAM;EACf,MAAMC,MAAM,GAAGL,SAAS,EAAxB;EACA,MAAM;IAAEM;EAAF,IAASD,MAAM,CAACE,KAAtB;EACA,MAAM,CAACC,UAAD,IAAeN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhC;EACA,OACI,MAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,QAAD;IAAU,IAAI,EAAEC,EAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ;AAKH,CATD;;AAWA,OAAO,MAAMC,kBAAkB,GAAGC,OAAO,CAACD,kBAAR,CAA2B,MAAOE,OAAP,IAAmB;EAC5EC,OAAO,CAACC,GAAR,CAAY,0BAAZ;EACAD,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,GAAR,CAAYC,OAAxB;EACA,MAAMC,MAAM,GAAGL,OAAO,CAACG,GAAR,GAAcH,OAAO,CAACG,GAAR,CAAYC,OAAZ,CAAoBC,MAAlC,GAA2C,EAA1D;EACAC,KAAK,CAACC,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgC,EAAhC;;EACA,IAAIR,OAAO,CAACG,GAAR,IAAeE,MAAnB,EAA2B;IACvBC,KAAK,CAACC,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgCH,MAAhC;EACH;;EACDL,OAAO,CAACS,KAAR,CAAcC,QAAd,CAAuB;IACnBC,IAAI,EAAEC;EADa,CAAvB;EAGAZ,OAAO,CAACS,KAAR,CAAcC,QAAd,CAAuBG,GAAvB;EACAZ,OAAO,CAACC,GAAR,CAAY,wBAAZ;EACA,MAAMF,OAAO,CAACS,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAdiC,CAA3B;AAgBP,eAAezB,IAAf"},"metadata":{},"sourceType":"module"}