{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫번째 게실글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와우와'\n    }, {\n      User: {\n        nickname: 'wi'\n      },\n      content: '힘내자'\n    }]\n  }],\n  imagePath: [],\n  addPostLoadding: false,\n  addPostDone: false,\n  addPostErr: null,\n  addComentLoadding: false,\n  addComentDone: false,\n  addComentErr: null\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPost = data => {\n  return {\n    type: ADD_POST_REQUEST,\n    data\n  };\n};\nexport const addComment = data => {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data\n  };\n};\nconst dummyPost = {\n  id: 2,\n  content: '더미 데이터입니다.',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoadding: true\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoadding: false,\n        addPostDone: true,\n        mainPosts: [PostDummy, ...state.mainPosts]\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoadding: false,\n        addPostErr: action.err\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addComentLoadding: true\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addComentLoadding: false,\n        addCommentDone: false\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addComentLoadding: false,\n        addComentErr: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePath","addPostLoadding","addPostDone","addPostErr","addComentLoadding","addComentDone","addComentErr","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","reducer","state","action","PostDummy","err","addCommentDone","error"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/reducers/post.js"],"sourcesContent":["export const initialState = {\r\n    mainPosts: [{\r\n        id: 1,\r\n        User: {\r\n            id: 1,\r\n            nickname: '제로초',\r\n        },\r\n        content: '첫번째 게실글 #해시태그 #익스프레스',\r\n        Images: [{\r\n            src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n        }, {\r\n            src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n        }, {\r\n            src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n        }],\r\n        Comments: [{\r\n            User: {\r\n                nickname: 'nero',\r\n            },\r\n            content: '우와우와'\r\n        }, {\r\n            User: {\r\n                nickname: 'wi',\r\n            },\r\n            content: '힘내자'\r\n        }],\r\n    }],\r\n    imagePath: [],\r\n    addPostLoadding: false,\r\n    addPostDone: false,\r\n    addPostErr: null,\r\n    addComentLoadding: false,\r\n    addComentDone: false,\r\n    addComentErr: null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'\r\n\r\n\r\n\r\nexport const addPost = (data) => {\r\n    return {\r\n        type: ADD_POST_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nexport const addComment = (data) => {\r\n    return {\r\n        type: ADD_COMMENT_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nconst dummyPost = {\r\n    id: 2,\r\n    content: '더미 데이터입니다.',\r\n    User: {\r\n        id: 1,\r\n        nickname: '제로초',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                addPostLoadding: true,\r\n            }\r\n        case ADD_COMMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addPostLoadding: false,\r\n                addPostDone: true,\r\n                mainPosts: [PostDummy, ...state.mainPosts]\r\n            }\r\n        case ADD_COMMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                addPostLoadding: false,\r\n                addPostErr: action.err,\r\n            }\r\n        case ADD_COMMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                addComentLoadding: true,\r\n            }\r\n        case ADD_COMMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addComentLoadding: false,\r\n                addCommentDone: false,\r\n            }\r\n        case ADD_COMMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                addComentLoadding: false,\r\n                addComentErr: action.error,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;EACxBC,SAAS,EAAE,CAAC;IACRC,EAAE,EAAE,CADI;IAERC,IAAI,EAAE;MACFD,EAAE,EAAE,CADF;MAEFE,QAAQ,EAAE;IAFR,CAFE;IAMRC,OAAO,EAAE,sBAND;IAORC,MAAM,EAAE,CAAC;MACLC,GAAG,EAAE;IADA,CAAD,EAEL;MACCA,GAAG,EAAE;IADN,CAFK,EAIL;MACCA,GAAG,EAAE;IADN,CAJK,CAPA;IAcRC,QAAQ,EAAE,CAAC;MACPL,IAAI,EAAE;QACFC,QAAQ,EAAE;MADR,CADC;MAIPC,OAAO,EAAE;IAJF,CAAD,EAKP;MACCF,IAAI,EAAE;QACFC,QAAQ,EAAE;MADR,CADP;MAICC,OAAO,EAAE;IAJV,CALO;EAdF,CAAD,CADa;EA2BxBI,SAAS,EAAE,EA3Ba;EA4BxBC,eAAe,EAAE,KA5BO;EA6BxBC,WAAW,EAAE,KA7BW;EA8BxBC,UAAU,EAAE,IA9BY;EA+BxBC,iBAAiB,EAAE,KA/BK;EAgCxBC,aAAa,EAAE,KAhCS;EAiCxBC,YAAY,EAAE;AAjCU,CAArB;AAoCP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAIP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU;EAC7B,OAAO;IACHC,IAAI,EAAER,gBADH;IAEHO;EAFG,CAAP;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAIF,IAAD,IAAU;EAChC,OAAO;IACHC,IAAI,EAAEL,mBADH;IAEHI;EAFG,CAAP;AAIH,CALM;AAOP,MAAMG,SAAS,GAAG;EACdxB,EAAE,EAAE,CADU;EAEdG,OAAO,EAAE,YAFK;EAGdF,IAAI,EAAE;IACFD,EAAE,EAAE,CADF;IAEFE,QAAQ,EAAE;EAFR,CAHQ;EAOdE,MAAM,EAAE,EAPM;EAQdE,QAAQ,EAAE;AARI,CAAlB;;AAWA,MAAMmB,OAAO,GAAG,CAACC,KAAK,GAAG5B,YAAT,EAAuB6B,MAAvB,KAAkC;EAC9C,QAAQA,MAAM,CAACL,IAAf;IACI,KAAKR,gBAAL;MACI,uCACOY,KADP;QAEIlB,eAAe,EAAE;MAFrB;;IAIJ,KAAKU,mBAAL;MACI,uCACOQ,KADP;QAEIlB,eAAe,EAAE,KAFrB;QAGIC,WAAW,EAAE,IAHjB;QAIIV,SAAS,EAAE,CAAC6B,SAAD,EAAY,GAAGF,KAAK,CAAC3B,SAArB;MAJf;;IAMJ,KAAKoB,mBAAL;MACI,uCACOO,KADP;QAEIlB,eAAe,EAAE,KAFrB;QAGIE,UAAU,EAAEiB,MAAM,CAACE;MAHvB;;IAKJ,KAAKZ,mBAAL;MACI,uCACOS,KADP;QAEIf,iBAAiB,EAAE;MAFvB;;IAIJ,KAAKO,mBAAL;MACI,uCACOQ,KADP;QAEIf,iBAAiB,EAAE,KAFvB;QAGImB,cAAc,EAAE;MAHpB;;IAKJ,KAAKX,mBAAL;MACI,uCACOO,KADP;QAEIf,iBAAiB,EAAE,KAFvB;QAGIE,YAAY,EAAEc,MAAM,CAACI;MAHzB;;IAKJ;MACI,OAAOL,KAAP;EArCR;AAwCH,CAzCD;;AA2CA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}