{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query; // if (router.isFallback) {\n  //   return <div>Loading...</div>\n  // }\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}; // export async function getStaticPaths() {\n//   return {\n//     paths: [\n//       { params: { id: '1' } },\n//       { params: { id: '2' } },\n//       { params: { id: '3' } },\n//       { params: { id: '4' } },\n//     ],\n//     fallback: true,\n//   };\n// }\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  return {\n    props: {}\n  };\n});\nexport default Post;","map":{"version":3,"names":["React","useSelector","useRouter","END","axios","LOAD_POST_REQUEST","wrapper","PostCard","AppLayout","LOAD_MY_INFO_REQUEST","Post","singlePost","state","post","router","id","query","getServerSideProps","context","cookie","req","headers","console","log","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise","props"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/pages/post/[id].js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport wrapper from '../../store/configureStore';\r\nimport PostCard from '../../components/PostCard';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\n\r\nconst Post = () => {\r\n  const { singlePost } = useSelector((state) => state.post);\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  // if (router.isFallback) {\r\n  //   return <div>Loading...</div>\r\n  // }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\n// export async function getStaticPaths() {\r\n//   return {\r\n//     paths: [\r\n//       { params: { id: '1' } },\r\n//       { params: { id: '2' } },\r\n//       { params: { id: '3' } },\r\n//       { params: { id: '4' } },\r\n//     ],\r\n//     fallback: true,\r\n//   };\r\n// }\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  console.log(context);\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n  return { props: {} };\r\n});\r\n\r\nexport default Post;"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,oBAAT,QAAqC,qBAArC;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAM;IAAEC;EAAF,IAAiBV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC;EACA,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;EACA,MAAM;IAAEa;EAAF,IAASD,MAAM,CAACE,KAAtB,CAHiB,CAKjB;EACA;EACA;;EAEA,OACE,MAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,QAAD;IAAU,IAAI,EAAEL,UAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AAKD,CAdD,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMM,kBAAkB,GAAGX,OAAO,CAACW,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;EAC9E,MAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;EACAG,OAAO,CAACC,GAAR,CAAYL,OAAZ;EACAd,KAAK,CAACoB,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgC,EAAhC;;EACA,IAAIP,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;IACzBf,KAAK,CAACoB,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgCN,MAAhC;EACD;;EACDD,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;IACrBC,IAAI,EAAEnB;EADe,CAAvB;EAGAS,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;IACrBC,IAAI,EAAEvB,iBADe;IAErBwB,IAAI,EAAEX,OAAO,CAACY,MAAR,CAAef;EAFA,CAAvB;EAIAG,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuBxB,GAAvB;EACA,MAAMe,OAAO,CAACQ,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;EACA,OAAO;IAAEC,KAAK,EAAE;EAAT,CAAP;AACD,CAjBiC,CAA3B;AAmBP,eAAevB,IAAf"},"metadata":{},"sourceType":"module"}