{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫번째 게실글 #해시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: '우와우와'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'wi'\n      },\n      content: '힘내자'\n    }]\n  }],\n  imagePath: [],\n  addPostLoadding: false,\n  addPostDone: false,\n  addPostErr: null,\n  removePostLoadding: false,\n  removePostDone: false,\n  removePostErr: null,\n  addCommentLoadding: false,\n  addCommentDone: false,\n  addCommentErr: null\n};\nexport const getDemmuyPost = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [{\n    src: faker.image.image()\n  }],\n  Comments: [{\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.sentence()\n  }]\n}));\ninitialState.mainPosts = initialState.mainPosts.concat(getDemmuyPost(10));\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPostAction = data => {\n  console.log(data);\n  return {\n    type: ADD_POST_REQUEST,\n    data\n  };\n};\nexport const addCommentAction = data => {\n  console.log(data);\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data\n  };\n};\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  }\n});\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoadding = true;\n        draft.addPostDone = false;\n        draft.addPostErr = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoadding = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoadding = false;\n        draft.addPostErr = action.err;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoadding = true;\n        draft.removePostDone = false;\n        draft.removePostErr = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoadding = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(item => item.id !== action.data);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadding = false;\n        draft.removePostErr = action.err;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoadding = true;\n        draft.addCommentDone = false;\n        draft.addCommentErr = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        const post = draft.mainPosts.find(item => item.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoadding = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoadding = false;\n        draft.addCommentErr = action.error;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePath","addPostLoadding","addPostDone","addPostErr","removePostLoadding","removePostDone","removePostErr","addCommentLoadding","addCommentDone","addCommentErr","getDemmuyPost","number","Array","fill","map","name","findName","lorem","paragraph","image","sentence","concat","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAction","data","console","log","type","addCommentAction","dummyPost","dummyComment","reducer","state","action","draft","unshift","err","filter","item","post","find","postId","error"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\n\r\nexport const initialState = {\r\n    mainPosts: [{\r\n        id: 1,\r\n        User: {\r\n            id: 1,\r\n            nickname: '제로초',\r\n        },\r\n        content: '첫번째 게실글 #해시태그 #익스프레스',\r\n        Images: [{\r\n            id: shortId.generate(),\r\n            src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n        }, {\r\n            id: shortId.generate(),\r\n            src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n        }, {\r\n            id: shortId.generate(),\r\n            src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n        }],\r\n        Comments: [{\r\n            id: shortId.generate(),\r\n            User: {\r\n                id: shortId.generate(),\r\n                nickname: 'nero',\r\n            },\r\n            content: '우와우와'\r\n        }, {\r\n            id: shortId.generate(),\r\n            User: {\r\n                id: shortId.generate(),\r\n                nickname: 'wi',\r\n            },\r\n            content: '힘내자'\r\n        }],\r\n    }],\r\n    imagePath: [],\r\n    addPostLoadding: false,\r\n    addPostDone: false,\r\n    addPostErr: null,\r\n    removePostLoadding: false,\r\n    removePostDone: false,\r\n    removePostErr: null,\r\n    addCommentLoadding: false,\r\n    addCommentDone: false,\r\n    addCommentErr: null,\r\n}\r\n\r\n\r\nexport const getDemmuyPost = (number) => Array(number).fill().map(() => ({\r\n    id: shortId.generate(),\r\n    User: {\r\n        id: shortId.generate(),\r\n        nickname: faker.name.findName(),\r\n    },\r\n    content: faker.lorem.paragraph(),\r\n    Images: [{\r\n        src: faker.image.image(),\r\n    }],\r\n    Comments: [{\r\n        User: {\r\n            id: shortId.generate(),\r\n            nickname: faker.name.findName(),\r\n        },\r\n        content: faker.lorem.sentence(),\r\n    }],\r\n}))\r\n\r\ninitialState.mainPosts = initialState.mainPosts.concat(getDemmuyPost(10))\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST'\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS'\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'\r\n\r\n\r\n\r\nexport const addPostAction = (data) => {\r\n    console.log(data)\r\n    return {\r\n        type: ADD_POST_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nexport const addCommentAction = (data) => {\r\n    console.log(data)\r\n    return {\r\n        type: ADD_COMMENT_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nconst dummyPost = (data) => (\r\n    {\r\n        id: data.id,\r\n        content: data.content,\r\n        User: {\r\n            id: 1,\r\n            nickname: '제로초',\r\n        },\r\n        Images: [],\r\n        Comments: [],\r\n    }\r\n)\r\n\r\nconst dummyComment = (data) => (\r\n    {\r\n        id: shortId.generate(),\r\n        content: data,\r\n        User: {\r\n            id: 1,\r\n            nickname: '제로초',\r\n        },\r\n    }\r\n)\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoadding = true\r\n                draft.addPostDone = false\r\n                draft.addPostErr = null\r\n\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoadding = false\r\n                draft.addPostDone = true\r\n                draft.mainPosts.unshift(dummyPost(action.data))\r\n\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoadding = false\r\n                draft.addPostErr = action.err\r\n\r\n                break;\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoadding = true\r\n                draft.removePostDone = false\r\n                draft.removePostErr = null\r\n                break;\r\n\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.removePostLoadding = false\r\n                draft.removePostDone = true\r\n                draft.mainPosts = state.mainPosts.filter((item) => item.id !== action.data)\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoadding = false\r\n                draft.removePostErr = action.err\r\n                break;\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoadding = true\r\n                draft.addCommentDone = false\r\n                draft.addCommentErr = null\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post = draft.mainPosts.find((item) => item.id === action.data.postId)\r\n                post.Comments.unshift((dummyComment(action.data.content)))\r\n\r\n                draft.addCommentLoadding = false\r\n                draft.addCommentDone = true\r\n                break;\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoadding = false\r\n                draft.addCommentErr = action.error\r\n\r\n            default:\r\n                return state\r\n        }\r\n    })\r\n}\r\n\r\nexport default reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}