{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport const initialState = {\n  mainPosts: [{// id: 1,\n    // User: {\n    //     id: 1,\n    //     nickname: '제로초',\n    // },\n    // content: '첫번째 게실글 #해시태그 #익스프레스',\n    // Images: [{\n    //     id: shortId.generate(),\n    //     src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n    // }, {\n    //     id: shortId.generate(),\n    //     src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n    // }, {\n    //     id: shortId.generate(),\n    //     src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n    // }],\n    // Comments: [{\n    //     id: shortId.generate(),\n    //     User: {\n    //         id: shortId.generate(),\n    //         nickname: 'nero',\n    //     },\n    //     content: '우와우와'\n    // }, {\n    //     id: shortId.generate(),\n    //     User: {\n    //         id: shortId.generate(),\n    //         nickname: 'wi',\n    //     },\n    //     content: '힘내자'\n    // }],\n  }],\n  imagePath: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoadding: false,\n  addPostDone: false,\n  addPostErr: null,\n  removePostLoadding: false,\n  removePostDone: false,\n  removePostErr: null,\n  addCommentLoadding: false,\n  addCommentDone: false,\n  addCommentErr: null\n};\nexport const getDemmuyPost = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [{\n    src: faker.image.image()\n  }],\n  Comments: [{\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.sentence()\n  }]\n}));\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPostAction = data => {\n  console.log(data);\n  return {\n    type: ADD_POST_REQUEST,\n    data\n  };\n};\nexport const addCommentAction = data => {\n  console.log(data);\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data\n  };\n};\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  }\n});\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts.push(action.data);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoadding = true;\n        draft.addPostDone = false;\n        draft.addPostErr = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoadding = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoadding = false;\n        draft.addPostErr = action.err;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoadding = true;\n        draft.removePostDone = false;\n        draft.removePostErr = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoadding = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(item => item.id !== action.data);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadding = false;\n        draft.removePostErr = action.err;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoadding = true;\n        draft.addCommentDone = false;\n        draft.addCommentErr = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        const post = draft.mainPosts.find(item => item.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoadding = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoadding = false;\n        draft.addCommentErr = action.error;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","imagePath","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoadding","addPostDone","addPostErr","removePostLoadding","removePostDone","removePostErr","addCommentLoadding","addCommentDone","addCommentErr","getDemmuyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAction","data","console","log","type","addCommentAction","dummyPost","dummyComment","reducer","state","action","draft","push","length","error","unshift","err","filter","item","post","find","postId"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\n\r\nexport const initialState = {\r\n    mainPosts: [{\r\n        // id: 1,\r\n        // User: {\r\n        //     id: 1,\r\n        //     nickname: '제로초',\r\n        // },\r\n        // content: '첫번째 게실글 #해시태그 #익스프레스',\r\n        // Images: [{\r\n        //     id: shortId.generate(),\r\n        //     src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n        // }, {\r\n        //     id: shortId.generate(),\r\n        //     src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n        // }, {\r\n        //     id: shortId.generate(),\r\n        //     src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n        // }],\r\n        // Comments: [{\r\n        //     id: shortId.generate(),\r\n        //     User: {\r\n        //         id: shortId.generate(),\r\n        //         nickname: 'nero',\r\n        //     },\r\n        //     content: '우와우와'\r\n        // }, {\r\n        //     id: shortId.generate(),\r\n        //     User: {\r\n        //         id: shortId.generate(),\r\n        //         nickname: 'wi',\r\n        //     },\r\n        //     content: '힘내자'\r\n        // }],\r\n    }],\r\n    imagePath: [],\r\n    hasMorePosts: true,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    addPostLoadding: false,\r\n    addPostDone: false,\r\n    addPostErr: null,\r\n    removePostLoadding: false,\r\n    removePostDone: false,\r\n    removePostErr: null,\r\n    addCommentLoadding: false,\r\n    addCommentDone: false,\r\n    addCommentErr: null,\r\n}\r\n\r\n\r\nexport const getDemmuyPost = (number) => Array(number).fill().map(() => ({\r\n    id: shortId.generate(),\r\n    User: {\r\n        id: shortId.generate(),\r\n        nickname: faker.name.findName(),\r\n    },\r\n    content: faker.lorem.paragraph(),\r\n    Images: [{\r\n        src: faker.image.image(),\r\n    }],\r\n    Comments: [{\r\n        User: {\r\n            id: shortId.generate(),\r\n            nickname: faker.name.findName(),\r\n        },\r\n        content: faker.lorem.sentence(),\r\n    }],\r\n}))\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST'\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS'\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'\r\n\r\n\r\n\r\nexport const addPostAction = (data) => {\r\n    console.log(data)\r\n    return {\r\n        type: ADD_POST_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nexport const addCommentAction = (data) => {\r\n    console.log(data)\r\n    return {\r\n        type: ADD_COMMENT_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nconst dummyPost = (data) => (\r\n    {\r\n        id: data.id,\r\n        content: data.content,\r\n        User: {\r\n            id: 1,\r\n            nickname: '제로초',\r\n        },\r\n        Images: [],\r\n        Comments: [],\r\n    }\r\n)\r\n\r\nconst dummyComment = (data) => (\r\n    {\r\n        id: shortId.generate(),\r\n        content: data,\r\n        User: {\r\n            id: 1,\r\n            nickname: '제로초',\r\n        },\r\n    }\r\n)\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case LOAD_POSTS_REQUEST:\r\n                draft.loadPostsLoading = true;\r\n                draft.loadPostsDone = false;\r\n                draft.loadPostsError = null;\r\n                break;\r\n            case LOAD_POSTS_SUCCESS:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsDone = true;\r\n                draft.mainPosts.push(action.data)\r\n                draft.hasMorePosts = draft.mainPosts.length < 50;\r\n                break;\r\n            case LOAD_POSTS_FAILURE:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsError = action.error;\r\n                break;\r\n\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoadding = true\r\n                draft.addPostDone = false\r\n                draft.addPostErr = null\r\n\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoadding = false\r\n                draft.addPostDone = true\r\n                draft.mainPosts.unshift(dummyPost(action.data))\r\n\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoadding = false\r\n                draft.addPostErr = action.err\r\n\r\n                break;\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoadding = true\r\n                draft.removePostDone = false\r\n                draft.removePostErr = null\r\n                break;\r\n\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.removePostLoadding = false\r\n                draft.removePostDone = true\r\n                draft.mainPosts = state.mainPosts.filter((item) => item.id !== action.data)\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoadding = false\r\n                draft.removePostErr = action.err\r\n                break;\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoadding = true\r\n                draft.addCommentDone = false\r\n                draft.addCommentErr = null\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post = draft.mainPosts.find((item) => item.id === action.data.postId)\r\n                post.Comments.unshift((dummyComment(action.data.content)))\r\n\r\n                draft.addCommentLoadding = false\r\n                draft.addCommentDone = true\r\n                break;\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoadding = false\r\n                draft.addCommentErr = action.error\r\n\r\n            default:\r\n                return state\r\n        }\r\n    })\r\n}\r\n\r\nexport default reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}