{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from './user';\nimport post from './post';\nvar initialState = {\n  user: {},\n  post: {}\n}; // ( 이전상태, 액션 ) => 다음상태\n\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","combineReducers","user","post","initialState","rootReducer","index","state","action","type","payload"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\"\r\nimport { combineReducers } from \"redux\";\r\nimport user from './user'\r\nimport post from './post'\r\n\r\nconst initialState = {\r\n    user: {\r\n\r\n    },\r\n\r\n    post: {\r\n\r\n    },\r\n};\r\n\r\n// ( 이전상태, 액션 ) => 다음상태\r\nconst rootReducer = combineReducers({\r\n    index: (state = {}, action) => {\r\n        switch (action.type) {\r\n            case HYDRATE:\r\n                return {\r\n                    ...state,\r\n                    ...action.payload\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    },\r\n    user,\r\n    post,\r\n})\r\n\r\nexport default rootReducer"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,YAAY,GAAG;EACjBF,IAAI,EAAE,EADW;EAKjBC,IAAI,EAAE;AALW,CAArB,C,CAUA;;AACA,IAAME,WAAW,GAAGJ,eAAe,CAAC;EAChCK,KAAK,EAAE,iBAAwB;IAAA,IAAvBC,KAAuB,uEAAf,EAAe;IAAA,IAAXC,MAAW;;IAC3B,QAAQA,MAAM,CAACC,IAAf;MACI,KAAKT,OAAL;QACI,uCACOO,KADP,GAEOC,MAAM,CAACE,OAFd;;MAIJ;QACI,OAAOH,KAAP;IAPR;EASH,CAX+B;EAYhCL,IAAI,EAAJA,IAZgC;EAahCC,IAAI,EAAJA;AAbgC,CAAD,CAAnC;AAgBA,eAAeE,WAAf"},"metadata":{},"sourceType":"module"}