{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nimport { LIKE_FAILURE, LIKE_REQUEST, LIKE_SUCCESS } from './user';\nexport const initialState = {\n  mainPosts: [{}],\n  imagePath: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  likeLoading: false,\n  likeDone: false,\n  likeError: null,\n  unLikeLoading: false,\n  unLikeDone: false,\n  unLikeError: null,\n  addPostLoadding: false,\n  addPostDone: false,\n  addPostErr: null,\n  removePostLoadding: false,\n  removePostDone: false,\n  removePostErr: null,\n  addCommentLoadding: false,\n  addCommentDone: false,\n  addCommentErr: null\n}; // export const getDemmuyPost = (number) => Array(number).fill().map(() => ({\n//     id: shortId.generate(),\n//     User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//     },\n//     content: faker.lorem.paragraph(),\n//     Images: [{\n//         src: faker.image.image(),\n//     }],\n//     Comments: [{\n//         User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//         },\n//         content: faker.lorem.sentence(),\n//     }],\n// }))\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const addPostAction = data => {\n  console.log(data);\n  return {\n    type: ADD_POST_REQUEST,\n    data\n  };\n};\nexport const addCommentAction = data => {\n  console.log(data);\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoadding = true;\n        draft.addPostDone = false;\n        draft.addPostErr = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoadding = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoadding = false;\n        draft.addPostErr = action.err;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoadding = true;\n        draft.removePostDone = false;\n        draft.removePostErr = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoadding = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(item => item.id !== action.data);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadding = false;\n        draft.removePostErr = action.err;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoadding = true;\n        draft.addCommentDone = false;\n        draft.addCommentErr = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        const post = draft.mainPosts.find(item => {\n          return item.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommentLoadding = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoadding = false;\n        draft.addCommentErr = action.error;\n\n      case LIKE_POST_REQUEST:\n        draft.likeLoading = true;\n        draft.likeDone = false;\n        draft.likeError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          draft.likeLoading = false;\n          draft.likeDone = true;\n          const post = draft.mainPosts.find(item => item.id === action.data.PostId);\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.unLikeLoading = false;\n        draft.unLikeError = true;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unLikeLoading = true;\n        draft.unLikeDone = false;\n        draft.unLikeError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          draft.unLikeLoading = false;\n          draft.unLikeDone = true;\n          const post = draft.mainPosts.filter(item => item.id !== action.data.PostId);\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unLikeLoading = false;\n        draft.unLikeDone = true;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","LIKE_FAILURE","LIKE_REQUEST","LIKE_SUCCESS","initialState","mainPosts","imagePath","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","likeLoading","likeDone","likeError","unLikeLoading","unLikeDone","unLikeError","addPostLoadding","addPostDone","addPostErr","removePostLoadding","removePostDone","removePostErr","addCommentLoadding","addCommentDone","addCommentErr","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","addPostAction","data","console","log","type","addCommentAction","reducer","state","action","draft","concat","length","error","unshift","err","filter","item","id","post","find","PostId","Comments","Likers","push","UserId"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\nimport { LIKE_FAILURE, LIKE_REQUEST, LIKE_SUCCESS } from './user';\r\n\r\nexport const initialState = {\r\n    mainPosts: [{\r\n    }],\r\n    imagePath: [],\r\n    hasMorePosts: true,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    likeLoading: false,\r\n    likeDone: false,\r\n    likeError: null,\r\n    unLikeLoading: false,\r\n    unLikeDone: false,\r\n    unLikeError: null,\r\n    addPostLoadding: false,\r\n    addPostDone: false,\r\n    addPostErr: null,\r\n    removePostLoadding: false,\r\n    removePostDone: false,\r\n    removePostErr: null,\r\n    addCommentLoadding: false,\r\n    addCommentDone: false,\r\n    addCommentErr: null,\r\n}\r\n\r\n\r\n// export const getDemmuyPost = (number) => Array(number).fill().map(() => ({\r\n//     id: shortId.generate(),\r\n//     User: {\r\n//         id: shortId.generate(),\r\n//         nickname: faker.name.findName(),\r\n//     },\r\n//     content: faker.lorem.paragraph(),\r\n//     Images: [{\r\n//         src: faker.image.image(),\r\n//     }],\r\n//     Comments: [{\r\n//         User: {\r\n//             id: shortId.generate(),\r\n//             nickname: faker.name.findName(),\r\n//         },\r\n//         content: faker.lorem.sentence(),\r\n//     }],\r\n// }))\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST'\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS'\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\n\r\n\r\nexport const addPostAction = (data) => {\r\n    console.log(data)\r\n    return {\r\n        type: ADD_POST_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nexport const addCommentAction = (data) => {\r\n    console.log(data)\r\n    return {\r\n        type: ADD_COMMENT_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case LOAD_POSTS_REQUEST:\r\n                draft.loadPostsLoading = true;\r\n                draft.loadPostsDone = false;\r\n                draft.loadPostsError = null;\r\n                break;\r\n            case LOAD_POSTS_SUCCESS:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsDone = true;\r\n                draft.mainPosts = action.data.concat(draft.mainPosts);\r\n                draft.hasMorePosts = draft.mainPosts.length < 50;\r\n                break;\r\n            case LOAD_POSTS_FAILURE:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsError = action.error;\r\n                break;\r\n\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoadding = true\r\n                draft.addPostDone = false\r\n                draft.addPostErr = null\r\n\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoadding = false\r\n                draft.addPostDone = true\r\n                draft.mainPosts.unshift(action.data)\r\n\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoadding = false\r\n                draft.addPostErr = action.err\r\n\r\n                break;\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoadding = true\r\n                draft.removePostDone = false\r\n                draft.removePostErr = null\r\n                break;\r\n\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.removePostLoadding = false\r\n                draft.removePostDone = true\r\n                draft.mainPosts = state.mainPosts.filter((item) => item.id !== action.data)\r\n                break;\r\n\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoadding = false\r\n                draft.removePostErr = action.err\r\n                break;\r\n\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoadding = true\r\n                draft.addCommentDone = false\r\n                draft.addCommentErr = null\r\n                break;\r\n\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post = draft.mainPosts.find((item) => { return item.id === action.data.PostId })\r\n                post.Comments.unshift(action.data)\r\n\r\n                draft.addCommentLoadding = false\r\n                draft.addCommentDone = true\r\n                break;\r\n\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoadding = false\r\n                draft.addCommentErr = action.error\r\n\r\n            case LIKE_POST_REQUEST:\r\n                draft.likeLoading = true\r\n                draft.likeDone = false\r\n                draft.likeError = null\r\n                break;\r\n\r\n            case LIKE_POST_SUCCESS: {\r\n                draft.likeLoading = false\r\n                draft.likeDone = true\r\n                const post = draft.mainPosts.find((item) => item.id === action.data.PostId)\r\n                post.Likers.push({id: action.data.UserId})\r\n                break;\r\n            }\r\n            case LIKE_POST_FAILURE:\r\n                draft.unLikeLoading = false\r\n                draft.unLikeError = true\r\n\r\n            case UNLIKE_POST_REQUEST:\r\n                draft.unLikeLoading = true\r\n                draft.unLikeDone = false\r\n                draft.unLikeError = null\r\n                break;\r\n\r\n            case UNLIKE_POST_SUCCESS:{\r\n                draft.unLikeLoading = false\r\n                draft.unLikeDone = true\r\n                const post = draft.mainPosts.filter((item) => item.id !== action.data.PostId)\r\n                post.Likers.push({id: action.data.UserId})\r\n                break;\r\n            }\r\n            case UNLIKE_POST_FAILURE:\r\n                draft.unLikeLoading = false\r\n                draft.unLikeDone = true\r\n\r\n            default:\r\n                return state\r\n        }\r\n    })\r\n}\r\n\r\nexport default reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}