{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, legacy_createStore as createStore } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers/index';\n\nvar configureStore = function configureStore() {\n  var enhancer = false ? compose(applyMiddleware([])) : composeWithDevTools(applyMiddleware([]));\n  var store = createStore(reducer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: false\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","legacy_createStore","createStore","composeWithDevTools","reducer","configureStore","enhancer","store","wrapper","debug"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from 'next-redux-wrapper'\r\nimport { applyMiddleware, compose, legacy_createStore as createStore } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from '../reducers/index'\r\n\r\nconst configureStore = () => {\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware([]))\r\n    : composeWithDevTools(applyMiddleware([]))\r\n    const store = createStore(reducer);\r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'devlopment',\r\n});\r\n\r\nexport default wrapper"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,kBAAkB,IAAIC,WAAzD,QAA4E,OAA5E;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;EACzB,IAAMC,QAAQ,GAAG,QACfN,OAAO,CAACD,eAAe,CAAC,EAAD,CAAhB,CADQ,GAEfI,mBAAmB,CAACJ,eAAe,CAAC,EAAD,CAAhB,CAFrB;EAGA,IAAMQ,KAAK,GAAGL,WAAW,CAACE,OAAD,CAAzB;EACA,OAAOG,KAAP;AACH,CAND;;AAQA,IAAMC,OAAO,GAAGV,aAAa,CAACO,cAAD,EAAiB;EAC1CI,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}