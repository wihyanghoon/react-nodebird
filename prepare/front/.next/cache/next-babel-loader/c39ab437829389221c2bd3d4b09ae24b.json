{"ast":null,"code":"import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post'; // (이전상태, 액션) => 다음상태\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return action.payload;\n\n    default:\n      {\n        const combineReducers = combineReducers({\n          user,\n          post\n        });\n        return combineReducers(state, action);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","combineReducers","user","post","rootReducer","state","action","type","payload"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\nimport post from './post';\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer = (state, action)=> {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            return action.payload\r\n        default: {\r\n            const combineReducers = combineReducers({\r\n                user,\r\n                post,\r\n            })\r\n            return combineReducers(state, action)\r\n        }\r\n    }\r\n};\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAkB;EAClC,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKP,OAAL;MACI,OAAOM,MAAM,CAACE,OAAd;;IACJ;MAAS;QACL,MAAMP,eAAe,GAAGA,eAAe,CAAC;UACpCC,IADoC;UAEpCC;QAFoC,CAAD,CAAvC;QAIA,OAAOF,eAAe,CAACI,KAAD,EAAQC,MAAR,CAAtB;MACH;EATL;AAWH,CAZD;;AAcA,eAAeF,WAAf"},"metadata":{},"sourceType":"module"}