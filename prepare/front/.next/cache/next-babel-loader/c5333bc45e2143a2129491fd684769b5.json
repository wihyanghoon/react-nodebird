{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport { addPostAction } from '../reducers/post';\nimport { useRef } from 'react';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePath = _useSelector.imagePath,\n      addPostLoadding = _useSelector.addPostLoadding,\n      addPostDone = _useSelector.addPostDone;\n\n  var imageInput = useRef();\n\n  var _useState = useState(\"\"),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onSubmit = useCallback(function () {\n    dispatch(addPostAction(text));\n  }, [text]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    var imagesData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imagesData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUSET,\n      data: imagesData\n    });\n  });\n  return __jsx(Form, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A0\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": \"right\"\n    },\n    htmlType: \"submit\",\n    loading: addPostLoadding,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(PostForm, \"Fy4JT+sjUfbLaQGgIgUVRvknXPY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useEffect","Form","Input","Button","useSelector","useDispatch","useState","useCallback","addPostAction","useRef","PostForm","state","post","imagePath","addPostLoadding","addPostDone","imageInput","text","setText","dispatch","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","onChangeImages","imagesData","FormData","forEach","call","files","f","append","type","UPLOAD_IMAGES_REQUSET","data"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/components/PostForm.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Form, Input, Button } from 'antd'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useState } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { addPostAction } from '../reducers/post'\r\nimport { useRef } from 'react';\r\n\r\nconst PostForm = () => {\r\n    const { imagePath, addPostLoadding, addPostDone } = useSelector((state) => state.post);\r\n    const imageInput = useRef();\r\n    const [text, setText] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        if(addPostDone){\r\n            setText('')\r\n        }\r\n    },[addPostDone])\r\n\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value)\r\n    }, [])\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPostAction(text))\r\n    }, [text])\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current])\r\n\r\n\r\n    const onChangeImages = useCallback((e) => {\r\n        const imagesData = new FormData();\r\n        [].forEach.call(e.target.files, (f)=>{\r\n            imagesData.append('image', f)\r\n        })\r\n        dispatch({\r\n            type: UPLOAD_IMAGES_REQUSET,\r\n            data: imagesData,\r\n        })\r\n    })\r\n    return (\r\n        <Form encType='multipart/form-data' onFinish={onSubmit}>\r\n            <Input.TextArea\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder='어떠한 일이 있었나요?'\r\n            />\r\n            <div>\r\n                <input type=\"file\" name='image' multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\" loading={addPostLoadding}>짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {/* {imagePath.map((item) => (\r\n                    <div key={item}>\r\n                        <img src={item} alt={item} style={{ width: '200px' }} />\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))} */}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}