{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport shortId from 'shortid';\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫번째 게실글 #해시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: '우와우와'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'wi'\n      },\n      content: '힘내자'\n    }]\n  }],\n  imagePath: [],\n  addPostLoadding: false,\n  addPostDone: false,\n  addPostErr: null,\n  removePostLoadding: false,\n  removePostDone: false,\n  removePostErr: null,\n  addComentLoadding: false,\n  addComentDone: false,\n  addComentErr: null\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPostAction = data => {\n  console.log(data);\n  return {\n    type: ADD_POST_REQUEST,\n    data\n  };\n};\nexport const addCommentAction = data => {\n  console.log(data);\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data\n  };\n};\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  }\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoadding: true,\n        addPostDone: false,\n        addPostErr: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoadding: false,\n        addPostDone: true,\n        mainPosts: [dummyPost(action.data), ...state.mainPosts]\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoadding: false,\n        addPostErr: action.err\n      });\n\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoadding: true,\n        addPostDone: false,\n        addPostErr: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoadding: false,\n        addPostDone: true,\n        mainPosts: [dummyPost(action.data), ...state.mainPosts]\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoadding: false,\n        addPostErr: action.err\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addComentLoadding: true,\n        addComentDone: false,\n        addComentErr: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      alert(action.data.postId);\n      console.log(action.data);\n      const postIndex = state.mainPosts.findIndex(item => item.id === action.data.postId); // 보낸 개시물과 같은아이디 위치값 찾기\n\n      console.log(postIndex);\n\n      const post = _objectSpread({}, state.mainPosts[postIndex]); // 위치값\n\n\n      post.Comments = [dummyComment(action.data.content), ...post.Comments]; // 해당 위치 코멘트\n\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = post;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addComentLoadding: false,\n        addCommentDone: true,\n        mainPosts\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addComentLoadding: false,\n        addComentErr: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePath","addPostLoadding","addPostDone","addPostErr","removePostLoadding","removePostDone","removePostErr","addComentLoadding","addComentDone","addComentErr","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAction","data","console","log","type","addCommentAction","dummyPost","dummyComment","reducer","state","action","err","alert","postId","postIndex","findIndex","item","post","addCommentDone","error"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid'\r\n\r\nexport const initialState = {\r\n    mainPosts: [{\r\n        id: 1,\r\n        User: {\r\n            id: 1,\r\n            nickname: '제로초',\r\n        },\r\n        content: '첫번째 게실글 #해시태그 #익스프레스',\r\n        Images: [{\r\n            id: shortId.generate(),\r\n            src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n        }, {\r\n            id: shortId.generate(),\r\n            src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n        }, {\r\n            id: shortId.generate(),\r\n            src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n        }],\r\n        Comments: [{\r\n            id: shortId.generate(),\r\n            User: {\r\n                id: shortId.generate(),\r\n                nickname: 'nero',\r\n            },\r\n            content: '우와우와'\r\n        }, {\r\n            id: shortId.generate(),\r\n            User: {\r\n                id: shortId.generate(),\r\n                nickname: 'wi',\r\n            },\r\n            content: '힘내자'\r\n        }],\r\n    }],\r\n    imagePath: [],\r\n    addPostLoadding: false,\r\n    addPostDone: false,\r\n    addPostErr: null,\r\n    removePostLoadding: false,\r\n    removePostDone: false,\r\n    removePostErr: null,\r\n    addComentLoadding: false,\r\n    addComentDone: false,\r\n    addComentErr: null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST'\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS'\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'\r\n\r\n\r\n\r\nexport const addPostAction = (data) => {\r\n    console.log(data)\r\n    return {\r\n        type: ADD_POST_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nexport const addCommentAction = (data) => {\r\n    console.log(data)\r\n    return {\r\n        type: ADD_COMMENT_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nconst dummyPost = (data) => (\r\n    {\r\n        id: data.id,\r\n        content: data.content,\r\n        User: {\r\n            id: 1,\r\n            nickname: '제로초',\r\n        },\r\n        Images: [],\r\n        Comments: [],\r\n    }\r\n)\r\n\r\nconst dummyComment = (data) => (\r\n    {\r\n        id: shortId.generate(),\r\n        content: data,\r\n        User: {\r\n            id: 1,\r\n            nickname: '제로초',\r\n        },\r\n    }\r\n)\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                addPostLoadding: true,\r\n                addPostDone: false,\r\n                addPostErr: null,\r\n            }\r\n        case ADD_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addPostLoadding: false,\r\n                addPostDone: true,\r\n                mainPosts: [dummyPost(action.data), ...state.mainPosts]\r\n            }\r\n        case ADD_COMMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                addPostLoadding: false,\r\n                addPostErr: action.err,\r\n            }\r\n            case ADD_POST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    addPostLoadding: true,\r\n                    addPostDone: false,\r\n                    addPostErr: null,\r\n                }\r\n            case ADD_POST_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    addPostLoadding: false,\r\n                    addPostDone: true,\r\n                    mainPosts: [dummyPost(action.data), ...state.mainPosts]\r\n                }\r\n            case ADD_COMMENT_FAILURE:\r\n                return {\r\n                    ...state,\r\n                    addPostLoadding: false,\r\n                    addPostErr: action.err,\r\n                }\r\n        case ADD_COMMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                addComentLoadding: true,\r\n                addComentDone: false,\r\n                addComentErr: null,\r\n            }\r\n        case ADD_COMMENT_SUCCESS:\r\n            alert(action.data.postId)\r\n            console.log(action.data)\r\n            const postIndex = state.mainPosts.findIndex((item) => item.id === action.data.postId) // 보낸 개시물과 같은아이디 위치값 찾기\r\n            console.log(postIndex)\r\n            const post = { ...state.mainPosts[postIndex] } // 위치값\r\n            post.Comments = [dummyComment(action.data.content), ...post.Comments]// 해당 위치 코멘트\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = post;\r\n\r\n            return {\r\n                ...state,\r\n                addComentLoadding: false,\r\n                addCommentDone: true,\r\n                mainPosts,\r\n            }\r\n        case ADD_COMMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                addComentLoadding: false,\r\n                addComentErr: action.error,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}