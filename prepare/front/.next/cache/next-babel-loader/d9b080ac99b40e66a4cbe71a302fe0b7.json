{"ast":null,"code":"import { delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction logInAPI() {\n  return axios.post('/api/login');\n}\n\nfunction* logIn(action) {\n  console.log('saga start');\n\n  try {\n    yield delay(1000); // const result = yield call(logInAPI, action.data)\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logaout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI)\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/logaout');\n}\n\nfunction* signUp() {\n  try {\n    // const result = yield call(logOutAPI)\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"names":["delay","all","fork","put","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","logInAPI","axios","post","logIn","action","console","log","type","data","err","error","response","logOutAPI","logOut","signUpAPI","signUp","watchLogIn","watchLogOut","watchSignUp","userSaga"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/sagas/user.js"],"sourcesContent":["import { delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE\r\n} from '../reducers/user'\r\n\r\n\r\nfunction logInAPI() {\r\n    return axios.post('/api/login')\r\n}\r\n\r\nfunction* logIn(action) {\r\n    console.log('saga start')\r\n    try {\r\n        yield delay(1000)\r\n        // const result = yield call(logInAPI, action.data)\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/api/logaout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        // const result = yield call(logOutAPI)\r\n        yield delay(1000)\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction signUpAPI() {\r\n    return axios.post('/api/logaout')\r\n}\r\n\r\nfunction* signUp() {\r\n    try {\r\n        // const result = yield call(logOutAPI)\r\n        yield delay(1000)\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut)\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ])\r\n}"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,eANJ,EAOIC,eAPJ,EAQIC,eARJ,EASIC,eATJ,QAUO,kBAVP;;AAaA,SAASC,QAAT,GAAoB;EAChB,OAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACH;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;EACpBC,OAAO,CAACC,GAAR,CAAY,YAAZ;;EACA,IAAI;IACA,MAAMpB,KAAK,CAAC,IAAD,CAAX,CADA,CAEA;;IACA,MAAMG,GAAG,CAAC;MACNkB,IAAI,EAAEf,cADA;MAENgB,IAAI,EAAEJ,MAAM,CAACI;IAFP,CAAD,CAAT;EAIH,CAPD,CAOE,OAAOC,GAAP,EAAY;IACV,MAAMpB,GAAG,CAAC;MACNkB,IAAI,EAAEd,cADA;MAENiB,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaH;IAFd,CAAD,CAAT;EAIH;AACJ;;AAED,SAASI,SAAT,GAAqB;EACjB,OAAOX,KAAK,CAACC,IAAN,CAAW,cAAX,CAAP;AACH;;AAED,UAAUW,MAAV,GAAmB;EACf,IAAI;IACA;IACA,MAAM3B,KAAK,CAAC,IAAD,CAAX;IACA,MAAMG,GAAG,CAAC;MACNkB,IAAI,EAAEZ;IADA,CAAD,CAAT;EAGH,CAND,CAME,OAAOc,GAAP,EAAY;IACV,MAAMpB,GAAG,CAAC;MACNkB,IAAI,EAAEX,eADA;MAENc,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaH;IAFd,CAAD,CAAT;EAIH;AACJ;;AAID,SAASM,SAAT,GAAqB;EACjB,OAAOb,KAAK,CAACC,IAAN,CAAW,cAAX,CAAP;AACH;;AAED,UAAUa,MAAV,GAAmB;EACf,IAAI;IACA;IACA,MAAM7B,KAAK,CAAC,IAAD,CAAX;IACA,MAAMG,GAAG,CAAC;MACNkB,IAAI,EAAET;IADA,CAAD,CAAT;EAGH,CAND,CAME,OAAOW,GAAP,EAAY;IACV,MAAMpB,GAAG,CAAC;MACNkB,IAAI,EAAER,eADA;MAENW,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaH;IAFd,CAAD,CAAT;EAIH;AACJ;;AAED,UAAUQ,UAAV,GAAuB;EACnB,MAAM1B,UAAU,CAACC,cAAD,EAAiBY,KAAjB,CAAhB;AACH;;AAED,UAAUc,WAAV,GAAwB;EACpB,MAAM3B,UAAU,CAACI,eAAD,EAAkBmB,MAAlB,CAAhB;AACH;;AAED,UAAUK,WAAV,GAAwB;EACpB,MAAM5B,UAAU,CAACO,eAAD,EAAkBkB,MAAlB,CAAhB;AACH;;AAED,eAAe,UAAUI,QAAV,GAAqB;EAChC,MAAMhC,GAAG,CAAC,CACNC,IAAI,CAAC4B,UAAD,CADE,EAEN5B,IAAI,CAAC6B,WAAD,CAFE,EAGN7B,IAAI,CAAC8B,WAAD,CAHE,CAAD,CAAT;AAKH"},"metadata":{},"sourceType":"module"}