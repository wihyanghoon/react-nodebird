{"ast":null,"code":"import { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\n\nfunction logInAPI() {\n  return axios.post('/api/login');\n}\n\nfunction* logIn(data) {\n  try {\n    // const result = yield call(logInAPI, action.data)\n    delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logaout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI)\n    delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["all","fork","put","delay","takeLatest","logInAPI","axios","post","logIn","data","type","result","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/sagas/user.js"],"sourcesContent":["import { all, fork, put , delay, takeLatest } from \"redux-saga/effects\";\r\n\r\n\r\nfunction logInAPI() {\r\n    return axios.post('/api/login')\r\n}\r\n\r\nfunction* logIn(data) {\r\n    try {\r\n        // const result = yield call(logInAPI, action.data)\r\n        delay(1000)\r\n        yield put({\r\n            type: 'LOG_IN_SUCCESS',\r\n            data: result.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: 'LOG_IN_FAILURE',\r\n            data: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/api/logaout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        // const result = yield call(logOutAPI)\r\n        delay(1000)\r\n        yield put({\r\n            type: 'LOG_OUT_SUCCESS',\r\n            data: result.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: 'LOG_OUT_FAILURE',\r\n            data: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('LOG_IN_REQUEST', logIn)\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest('LOG_OUT_REQUEST', logOut)\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut)\r\n    ])\r\n}"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAA0BC,KAA1B,EAAiCC,UAAjC,QAAmD,oBAAnD;;AAGA,SAASC,QAAT,GAAoB;EAChB,OAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACH;;AAED,UAAUC,KAAV,CAAgBC,IAAhB,EAAsB;EAClB,IAAI;IACA;IACAN,KAAK,CAAC,IAAD,CAAL;IACA,MAAMD,GAAG,CAAC;MACNQ,IAAI,EAAE,gBADA;MAEND,IAAI,EAAEE,MAAM,CAACF;IAFP,CAAD,CAAT;EAIH,CAPD,CAOE,OAAOG,GAAP,EAAY;IACV,MAAMV,GAAG,CAAC;MACNQ,IAAI,EAAE,gBADA;MAEND,IAAI,EAAEG,GAAG,CAACC,QAAJ,CAAaJ;IAFb,CAAD,CAAT;EAIH;AACJ;;AAED,SAASK,SAAT,GAAqB;EACjB,OAAOR,KAAK,CAACC,IAAN,CAAW,cAAX,CAAP;AACH;;AAED,UAAUQ,MAAV,GAAmB;EACf,IAAI;IACA;IACAZ,KAAK,CAAC,IAAD,CAAL;IACA,MAAMD,GAAG,CAAC;MACNQ,IAAI,EAAE,iBADA;MAEND,IAAI,EAAEE,MAAM,CAACF;IAFP,CAAD,CAAT;EAIH,CAPD,CAOE,OAAOG,GAAP,EAAY;IACV,MAAMV,GAAG,CAAC;MACNQ,IAAI,EAAE,iBADA;MAEND,IAAI,EAAEG,GAAG,CAACC,QAAJ,CAAaJ;IAFb,CAAD,CAAT;EAIH;AACJ;;AAED,UAAUO,UAAV,GAAuB;EACnB,MAAMZ,UAAU,CAAC,gBAAD,EAAmBI,KAAnB,CAAhB;AACH;;AAED,UAAUS,WAAV,GAAwB;EACpB,MAAMb,UAAU,CAAC,iBAAD,EAAoBW,MAApB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;EAChC,MAAMlB,GAAG,CAAC,CACNC,IAAI,CAACe,UAAD,CADE,EAENf,IAAI,CAACgB,WAAD,CAFE,CAAD,CAAT;AAIH"},"metadata":{},"sourceType":"module"}