{"ast":null,"code":"import produce from 'immer';\nexport var initialState = {\n  mainPosts: [],\n  // 메인\n  singlePost: null,\n  // 싱글\n  imagePath: [],\n  // 이미지\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  // 여러개 게시글 불러오기\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadPostLoading: false,\n  // 게시글 불러오기\n  loadPostDone: false,\n  loadPostError: null,\n  likeLoading: false,\n  // 좋아요\n  likeDone: false,\n  likeError: null,\n  unLikeLoading: false,\n  // 좋아요 취소\n  unLikeDone: false,\n  unLikeError: null,\n  addPostLoadding: false,\n  // 게시글 저장\n  addPostDone: false,\n  addPostErr: null,\n  removePostLoadding: false,\n  // 게시글 삭제\n  removePostDone: false,\n  removePostErr: null,\n  addCommentLoadding: false,\n  // 댓글\n  addCommentDone: false,\n  addCommentErr: null,\n  upLoadImagesLoadding: false,\n  // 이미지\n  upLoadImagesDone: false,\n  upLoadImagesErr: null,\n  retweetLoadding: false,\n  // 리트윗\n  retweetDone: false,\n  retweetErr: null\n}; // export const getDemmuyPost = (number) => Array(number).fill().map(() => ({\n//     id: shortId.generate(),\n//     User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//     },\n//     content: faker.lorem.paragraph(),\n//     Images: [{\n//         src: faker.image.image(),\n//     }],\n//     Comments: [{\n//         User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//         },\n//         content: faker.lorem.sentence(),\n//     }],\n// }))\n\nexport var REMOVE_IMAGES_SUCSESS = 'REMOVE_IMAGES_SUCSESS';\nexport var LOAD_POST_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var addPostAction = function addPostAction(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addCommentAction = function addCommentAction(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case RETWEET_REQUEST:\n        draft.retweetLoadding = true;\n        draft.retweetDone = false;\n        draft.retweetErr = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        draft.retweetLoadding = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case RETWEET_FAILURE:\n        draft.retweetLoadding = false;\n        draft.retweetErr = action.error;\n        break;\n\n      case REMOVE_IMAGES_SUCSESS:\n        draft.imagePath = draft.imagePath.filter(function (item, index) {\n          return index !== action.data;\n        });\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.upLoadImagesLoadding = true;\n        draft.upLoadImagesDone = false;\n        draft.upLoadImagesErr = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        draft.upLoadImagesLoadding = true;\n        draft.upLoadImagesDone = false;\n        draft.imagePath = action.data;\n        break;\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.upLoadImagesLoadding = false;\n        draft.upLoadImagesErr = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likeLoading = true;\n        draft.likeDone = false;\n        draft.likeError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (item) {\n            return item.id === action.data.PostId;\n          });\n\n          _post.Likers.push({\n            id: action.data.UserId\n          });\n\n          draft.likeLoading = false;\n          draft.likeDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.unLikeLoading = false;\n        draft.unLikeError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unLikeLoading = true;\n        draft.unLikeDone = false;\n        draft.unLikeError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          draft.unLikeLoading = false;\n          draft.unLikeDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unLikeLoading = false;\n        draft.unLikeDone = true;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = draft.mainPosts.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoadding = true;\n        draft.addPostDone = false;\n        draft.addPostErr = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoadding = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePath = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoadding = false;\n        draft.addPostErr = action.err;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoadding = true;\n        draft.removePostDone = false;\n        draft.removePostErr = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoadding = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(function (item) {\n          return item.id !== action.data.PostId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoadding = false;\n        draft.removePostErr = action.err;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoadding = true;\n        draft.addCommentDone = false;\n        draft.addCommentErr = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (item) {\n          return item.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommentLoadding = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoadding = false;\n        draft.addCommentErr = action.error;\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","singlePost","imagePath","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","loadPostLoading","loadPostDone","loadPostError","likeLoading","likeDone","likeError","unLikeLoading","unLikeDone","unLikeError","addPostLoadding","addPostDone","addPostErr","removePostLoadding","removePostDone","removePostErr","addCommentLoadding","addCommentDone","addCommentErr","upLoadImagesLoadding","upLoadImagesDone","upLoadImagesErr","retweetLoadding","retweetDone","retweetErr","REMOVE_IMAGES_SUCSESS","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","addPostAction","data","type","addCommentAction","reducer","state","action","draft","unshift","error","filter","item","index","post","find","id","PostId","Likers","push","UserId","concat","length","err","Comments"],"sources":["C:/Users/user/Desktop/react-nodebird/prepare/front/reducers/post.js"],"sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n    mainPosts: [], // 메인\r\n    singlePost: null, // 싱글\r\n    imagePath: [], // 이미지\r\n    hasMorePosts: true,\r\n    loadPostsLoading: false, // 여러개 게시글 불러오기\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    loadPostLoading: false, // 게시글 불러오기\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n    likeLoading: false, // 좋아요\r\n    likeDone: false,\r\n    likeError: null,\r\n    unLikeLoading: false, // 좋아요 취소\r\n    unLikeDone: false,\r\n    unLikeError: null,\r\n    addPostLoadding: false, // 게시글 저장\r\n    addPostDone: false,\r\n    addPostErr: null,\r\n    removePostLoadding: false, // 게시글 삭제\r\n    removePostDone: false,\r\n    removePostErr: null,\r\n    addCommentLoadding: false, // 댓글\r\n    addCommentDone: false,\r\n    addCommentErr: null,\r\n    upLoadImagesLoadding: false, // 이미지\r\n    upLoadImagesDone: false,\r\n    upLoadImagesErr: null,\r\n    retweetLoadding: false, // 리트윗\r\n    retweetDone: false,\r\n    retweetErr: null,\r\n}\r\n\r\n\r\n// export const getDemmuyPost = (number) => Array(number).fill().map(() => ({\r\n//     id: shortId.generate(),\r\n//     User: {\r\n//         id: shortId.generate(),\r\n//         nickname: faker.name.findName(),\r\n//     },\r\n//     content: faker.lorem.paragraph(),\r\n//     Images: [{\r\n//         src: faker.image.image(),\r\n//     }],\r\n//     Comments: [{\r\n//         User: {\r\n//             id: shortId.generate(),\r\n//             nickname: faker.name.findName(),\r\n//         },\r\n//         content: faker.lorem.sentence(),\r\n//     }],\r\n// }))\r\n\r\nexport const REMOVE_IMAGES_SUCSESS = 'REMOVE_IMAGES_SUCSESS';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST'\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS'\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST'\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS'\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE'\r\n\r\nexport const addPostAction = (data) => {\r\n    return {\r\n        type: ADD_POST_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nexport const addCommentAction = (data) => {\r\n    return {\r\n        type: ADD_COMMENT_REQUEST,\r\n        data\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case RETWEET_REQUEST:\r\n                draft.retweetLoadding = true\r\n                draft.retweetDone = false\r\n                draft.retweetErr = null\r\n                break;\r\n\r\n            case RETWEET_SUCCESS:\r\n                draft.retweetLoadding = false\r\n                draft.retweetDone = true\r\n                draft.mainPosts.unshift(action.data)\r\n                break;\r\n\r\n            case RETWEET_FAILURE:\r\n                draft.retweetLoadding = false\r\n                draft.retweetErr = action.error\r\n                break;\r\n\r\n            case REMOVE_IMAGES_SUCSESS:\r\n                draft.imagePath = draft.imagePath.filter((item, index) => index !== action.data)\r\n                break;\r\n\r\n            case UPLOAD_IMAGES_REQUEST:\r\n                draft.upLoadImagesLoadding = true\r\n                draft.upLoadImagesDone = false\r\n                draft.upLoadImagesErr = null\r\n                break;\r\n\r\n            case UPLOAD_IMAGES_SUCCESS:\r\n                draft.upLoadImagesLoadding = true\r\n                draft.upLoadImagesDone = false\r\n                draft.imagePath = action.data\r\n                break;\r\n\r\n            case UPLOAD_IMAGES_FAILURE:\r\n                draft.upLoadImagesLoadding = false\r\n                draft.upLoadImagesErr = action.error\r\n                break;\r\n            \r\n            case LIKE_POST_REQUEST:\r\n                draft.likeLoading = true\r\n                draft.likeDone = false\r\n                draft.likeError = null\r\n                break;\r\n\r\n            case LIKE_POST_SUCCESS: {\r\n                const post = draft.mainPosts.find((item) => item.id === action.data.PostId)\r\n                post.Likers.push({ id: action.data.UserId })\r\n                draft.likeLoading = false\r\n                draft.likeDone = true\r\n                break;\r\n            }\r\n            \r\n            case LIKE_POST_FAILURE:\r\n                draft.unLikeLoading = false\r\n                draft.unLikeError = action.error\r\n                break;\r\n\r\n            case UNLIKE_POST_REQUEST:\r\n                draft.unLikeLoading = true\r\n                draft.unLikeDone = false\r\n                draft.unLikeError = null\r\n                break;\r\n\r\n            case UNLIKE_POST_SUCCESS: {\r\n                draft.unLikeLoading = false\r\n                draft.unLikeDone = true\r\n                break;\r\n            }\r\n            case UNLIKE_POST_FAILURE:\r\n                draft.unLikeLoading = false\r\n                draft.unLikeDone = true\r\n                break;\r\n\r\n            case LOAD_POSTS_REQUEST:\r\n                draft.loadPostsLoading = true;\r\n                draft.loadPostsDone = false;\r\n                draft.loadPostsError = null;\r\n                break;\r\n\r\n            case LOAD_POSTS_SUCCESS:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsDone = true;\r\n                draft.mainPosts = draft.mainPosts.concat(action.data);\r\n                draft.hasMorePosts = draft.mainPosts.length === 10;\r\n                break;\r\n\r\n            case LOAD_POSTS_FAILURE:\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsError = action.error;\r\n                break;\r\n\r\n            case LOAD_POST_REQUEST:\r\n                draft.loadPostLoading = true;\r\n                draft.loadPostDone = false;\r\n                draft.loadPostError = null;\r\n                break;\r\n\r\n            case LOAD_POST_SUCCESS:\r\n                draft.loadPostLoading = false;\r\n                draft.loadPostDone = true;\r\n                draft.singlePost = action.data;\r\n                break;\r\n\r\n            case LOAD_POST_FAILURE:\r\n                draft.loadPostLoading = false;\r\n                draft.loadPostError = action.error;\r\n                break;\r\n\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoadding = true\r\n                draft.addPostDone = false\r\n                draft.addPostErr = null\r\n                break;\r\n\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoadding = false\r\n                draft.addPostDone = true\r\n                draft.mainPosts.unshift(action.data)\r\n                draft.imagePath = []\r\n                break;\r\n\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoadding = false\r\n                draft.addPostErr = action.err\r\n                break;\r\n\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoadding = true\r\n                draft.removePostDone = false\r\n                draft.removePostErr = null\r\n                break;\r\n\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.removePostLoadding = false\r\n                draft.removePostDone = true\r\n                draft.mainPosts = state.mainPosts.filter((item) => item.id !== action.data.PostId)\r\n                break;\r\n\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoadding = false\r\n                draft.removePostErr = action.err\r\n                break;\r\n\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoadding = true\r\n                draft.addCommentDone = false\r\n                draft.addCommentErr = null\r\n                break;\r\n\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post = draft.mainPosts.find((item) => { return item.id === action.data.PostId })\r\n                post.Comments.unshift(action.data)\r\n                draft.addCommentLoadding = false\r\n                draft.addCommentDone = true\r\n                break;\r\n\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoadding = false\r\n                draft.addCommentErr = action.error\r\n                break;\r\n\r\n            default:\r\n                return state\r\n        }\r\n    })\r\n}\r\n\r\nexport default reducer"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,IAAMC,YAAY,GAAG;EACxBC,SAAS,EAAE,EADa;EACT;EACfC,UAAU,EAAE,IAFY;EAEN;EAClBC,SAAS,EAAE,EAHa;EAGT;EACfC,YAAY,EAAE,IAJU;EAKxBC,gBAAgB,EAAE,KALM;EAKC;EACzBC,aAAa,EAAE,KANS;EAOxBC,cAAc,EAAE,IAPQ;EAQxBC,eAAe,EAAE,KARO;EAQA;EACxBC,YAAY,EAAE,KATU;EAUxBC,aAAa,EAAE,IAVS;EAWxBC,WAAW,EAAE,KAXW;EAWJ;EACpBC,QAAQ,EAAE,KAZc;EAaxBC,SAAS,EAAE,IAba;EAcxBC,aAAa,EAAE,KAdS;EAcF;EACtBC,UAAU,EAAE,KAfY;EAgBxBC,WAAW,EAAE,IAhBW;EAiBxBC,eAAe,EAAE,KAjBO;EAiBA;EACxBC,WAAW,EAAE,KAlBW;EAmBxBC,UAAU,EAAE,IAnBY;EAoBxBC,kBAAkB,EAAE,KApBI;EAoBG;EAC3BC,cAAc,EAAE,KArBQ;EAsBxBC,aAAa,EAAE,IAtBS;EAuBxBC,kBAAkB,EAAE,KAvBI;EAuBG;EAC3BC,cAAc,EAAE,KAxBQ;EAyBxBC,aAAa,EAAE,IAzBS;EA0BxBC,oBAAoB,EAAE,KA1BE;EA0BK;EAC7BC,gBAAgB,EAAE,KA3BM;EA4BxBC,eAAe,EAAE,IA5BO;EA6BxBC,eAAe,EAAE,KA7BO;EA6BA;EACxBC,WAAW,EAAE,KA9BW;EA+BxBC,UAAU,EAAE;AA/BY,CAArB,C,CAmCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,IAAMC,iBAAiB,GAAG,oBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,oBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,oBAA1B;AAEP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;EACnC,OAAO;IACHC,IAAI,EAAEvB,gBADH;IAEHsB,IAAI,EAAJA;EAFG,CAAP;AAIH,CALM;AAOP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,IAAD,EAAU;EACtC,OAAO;IACHC,IAAI,EAAEjB,mBADH;IAEHgB,IAAI,EAAJA;EAFG,CAAP;AAIH,CALM;;AAOP,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBjE,YAAyB;EAAA,IAAXkE,MAAW;EAC9C,OAAOnE,OAAO,CAACkE,KAAD,EAAQ,UAACE,KAAD,EAAW;IAC7B,QAAQD,MAAM,CAACJ,IAAf;MACI,KAAKL,eAAL;QACIU,KAAK,CAACtC,eAAN,GAAwB,IAAxB;QACAsC,KAAK,CAACrC,WAAN,GAAoB,KAApB;QACAqC,KAAK,CAACpC,UAAN,GAAmB,IAAnB;QACA;;MAEJ,KAAK2B,eAAL;QACIS,KAAK,CAACtC,eAAN,GAAwB,KAAxB;QACAsC,KAAK,CAACrC,WAAN,GAAoB,IAApB;QACAqC,KAAK,CAAClE,SAAN,CAAgBmE,OAAhB,CAAwBF,MAAM,CAACL,IAA/B;QACA;;MAEJ,KAAKF,eAAL;QACIQ,KAAK,CAACtC,eAAN,GAAwB,KAAxB;QACAsC,KAAK,CAACpC,UAAN,GAAmBmC,MAAM,CAACG,KAA1B;QACA;;MAEJ,KAAKrC,qBAAL;QACImC,KAAK,CAAChE,SAAN,GAAkBgE,KAAK,CAAChE,SAAN,CAAgBmE,MAAhB,CAAuB,UAACC,IAAD,EAAOC,KAAP;UAAA,OAAiBA,KAAK,KAAKN,MAAM,CAACL,IAAlC;QAAA,CAAvB,CAAlB;QACA;;MAEJ,KAAKV,qBAAL;QACIgB,KAAK,CAACzC,oBAAN,GAA6B,IAA7B;QACAyC,KAAK,CAACxC,gBAAN,GAAyB,KAAzB;QACAwC,KAAK,CAACvC,eAAN,GAAwB,IAAxB;QACA;;MAEJ,KAAKwB,qBAAL;QACIe,KAAK,CAACzC,oBAAN,GAA6B,IAA7B;QACAyC,KAAK,CAACxC,gBAAN,GAAyB,KAAzB;QACAwC,KAAK,CAAChE,SAAN,GAAkB+D,MAAM,CAACL,IAAzB;QACA;;MAEJ,KAAKR,qBAAL;QACIc,KAAK,CAACzC,oBAAN,GAA6B,KAA7B;QACAyC,KAAK,CAACvC,eAAN,GAAwBsC,MAAM,CAACG,KAA/B;QACA;;MAEJ,KAAKrB,iBAAL;QACImB,KAAK,CAACxD,WAAN,GAAoB,IAApB;QACAwD,KAAK,CAACvD,QAAN,GAAiB,KAAjB;QACAuD,KAAK,CAACtD,SAAN,GAAkB,IAAlB;QACA;;MAEJ,KAAKoC,iBAAL;QAAwB;UACpB,IAAMwB,KAAI,GAAGN,KAAK,CAAClE,SAAN,CAAgByE,IAAhB,CAAqB,UAACH,IAAD;YAAA,OAAUA,IAAI,CAACI,EAAL,KAAYT,MAAM,CAACL,IAAP,CAAYe,MAAlC;UAAA,CAArB,CAAb;;UACAH,KAAI,CAACI,MAAL,CAAYC,IAAZ,CAAiB;YAAEH,EAAE,EAAET,MAAM,CAACL,IAAP,CAAYkB;UAAlB,CAAjB;;UACAZ,KAAK,CAACxD,WAAN,GAAoB,KAApB;UACAwD,KAAK,CAACvD,QAAN,GAAiB,IAAjB;UACA;QACH;;MAED,KAAKsC,iBAAL;QACIiB,KAAK,CAACrD,aAAN,GAAsB,KAAtB;QACAqD,KAAK,CAACnD,WAAN,GAAoBkD,MAAM,CAACG,KAA3B;QACA;;MAEJ,KAAKf,mBAAL;QACIa,KAAK,CAACrD,aAAN,GAAsB,IAAtB;QACAqD,KAAK,CAACpD,UAAN,GAAmB,KAAnB;QACAoD,KAAK,CAACnD,WAAN,GAAoB,IAApB;QACA;;MAEJ,KAAKuC,mBAAL;QAA0B;UACtBY,KAAK,CAACrD,aAAN,GAAsB,KAAtB;UACAqD,KAAK,CAACpD,UAAN,GAAmB,IAAnB;UACA;QACH;;MACD,KAAKyC,mBAAL;QACIW,KAAK,CAACrD,aAAN,GAAsB,KAAtB;QACAqD,KAAK,CAACpD,UAAN,GAAmB,IAAnB;QACA;;MAEJ,KAAKqB,kBAAL;QACI+B,KAAK,CAAC9D,gBAAN,GAAyB,IAAzB;QACA8D,KAAK,CAAC7D,aAAN,GAAsB,KAAtB;QACA6D,KAAK,CAAC5D,cAAN,GAAuB,IAAvB;QACA;;MAEJ,KAAK8B,kBAAL;QACI8B,KAAK,CAAC9D,gBAAN,GAAyB,KAAzB;QACA8D,KAAK,CAAC7D,aAAN,GAAsB,IAAtB;QACA6D,KAAK,CAAClE,SAAN,GAAkBkE,KAAK,CAAClE,SAAN,CAAgB+E,MAAhB,CAAuBd,MAAM,CAACL,IAA9B,CAAlB;QACAM,KAAK,CAAC/D,YAAN,GAAqB+D,KAAK,CAAClE,SAAN,CAAgBgF,MAAhB,KAA2B,EAAhD;QACA;;MAEJ,KAAK3C,kBAAL;QACI6B,KAAK,CAAC9D,gBAAN,GAAyB,KAAzB;QACA8D,KAAK,CAAC5D,cAAN,GAAuB2D,MAAM,CAACG,KAA9B;QACA;;MAEJ,KAAKpC,iBAAL;QACIkC,KAAK,CAAC3D,eAAN,GAAwB,IAAxB;QACA2D,KAAK,CAAC1D,YAAN,GAAqB,KAArB;QACA0D,KAAK,CAACzD,aAAN,GAAsB,IAAtB;QACA;;MAEJ,KAAKwB,iBAAL;QACIiC,KAAK,CAAC3D,eAAN,GAAwB,KAAxB;QACA2D,KAAK,CAAC1D,YAAN,GAAqB,IAArB;QACA0D,KAAK,CAACjE,UAAN,GAAmBgE,MAAM,CAACL,IAA1B;QACA;;MAEJ,KAAK1B,iBAAL;QACIgC,KAAK,CAAC3D,eAAN,GAAwB,KAAxB;QACA2D,KAAK,CAACzD,aAAN,GAAsBwD,MAAM,CAACG,KAA7B;QACA;;MAEJ,KAAK9B,gBAAL;QACI4B,KAAK,CAAClD,eAAN,GAAwB,IAAxB;QACAkD,KAAK,CAACjD,WAAN,GAAoB,KAApB;QACAiD,KAAK,CAAChD,UAAN,GAAmB,IAAnB;QACA;;MAEJ,KAAKqB,gBAAL;QACI2B,KAAK,CAAClD,eAAN,GAAwB,KAAxB;QACAkD,KAAK,CAACjD,WAAN,GAAoB,IAApB;QACAiD,KAAK,CAAClE,SAAN,CAAgBmE,OAAhB,CAAwBF,MAAM,CAACL,IAA/B;QACAM,KAAK,CAAChE,SAAN,GAAkB,EAAlB;QACA;;MAEJ,KAAKsC,gBAAL;QACI0B,KAAK,CAAClD,eAAN,GAAwB,KAAxB;QACAkD,KAAK,CAAChD,UAAN,GAAmB+C,MAAM,CAACgB,GAA1B;QACA;;MAEJ,KAAKxC,mBAAL;QACIyB,KAAK,CAAC/C,kBAAN,GAA2B,IAA3B;QACA+C,KAAK,CAAC9C,cAAN,GAAuB,KAAvB;QACA8C,KAAK,CAAC7C,aAAN,GAAsB,IAAtB;QACA;;MAEJ,KAAKqB,mBAAL;QACIwB,KAAK,CAAC/C,kBAAN,GAA2B,KAA3B;QACA+C,KAAK,CAAC9C,cAAN,GAAuB,IAAvB;QACA8C,KAAK,CAAClE,SAAN,GAAkBgE,KAAK,CAAChE,SAAN,CAAgBqE,MAAhB,CAAuB,UAACC,IAAD;UAAA,OAAUA,IAAI,CAACI,EAAL,KAAYT,MAAM,CAACL,IAAP,CAAYe,MAAlC;QAAA,CAAvB,CAAlB;QACA;;MAEJ,KAAKhC,mBAAL;QACIuB,KAAK,CAAC/C,kBAAN,GAA2B,KAA3B;QACA+C,KAAK,CAAC7C,aAAN,GAAsB4C,MAAM,CAACgB,GAA7B;QACA;;MAEJ,KAAKrC,mBAAL;QACIsB,KAAK,CAAC5C,kBAAN,GAA2B,IAA3B;QACA4C,KAAK,CAAC3C,cAAN,GAAuB,KAAvB;QACA2C,KAAK,CAAC1C,aAAN,GAAsB,IAAtB;QACA;;MAEJ,KAAKqB,mBAAL;QACI,IAAM2B,IAAI,GAAGN,KAAK,CAAClE,SAAN,CAAgByE,IAAhB,CAAqB,UAACH,IAAD,EAAU;UAAE,OAAOA,IAAI,CAACI,EAAL,KAAYT,MAAM,CAACL,IAAP,CAAYe,MAA/B;QAAuC,CAAxE,CAAb;QACAH,IAAI,CAACU,QAAL,CAAcf,OAAd,CAAsBF,MAAM,CAACL,IAA7B;QACAM,KAAK,CAAC5C,kBAAN,GAA2B,KAA3B;QACA4C,KAAK,CAAC3C,cAAN,GAAuB,IAAvB;QACA;;MAEJ,KAAKuB,mBAAL;QACIoB,KAAK,CAAC5C,kBAAN,GAA2B,KAA3B;QACA4C,KAAK,CAAC1C,aAAN,GAAsByC,MAAM,CAACG,KAA7B;QACA;;MAEJ;QACI,OAAOJ,KAAP;IAnKR;EAqKH,CAtKa,CAAd;AAuKH,CAxKD;;AA0KA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}